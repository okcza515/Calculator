{"ast":null,"code":"var _jsxFileName = \"D:\\\\Calculator web\\\\react-calculator\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport logo from './logo.svg';\nimport './App.css';\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const buttons = [[1, 2, 3], [4, 5, 6], [7, 8, 9], ['+', '-', '*', '%', '=']];\n  const currentOperator = null;\n  const [Mode, setMode] = useState('isNumber');\n  const [display, setDisplay] = useState(0);\n  const [sum, setSum] = useState(0);\n  const [degree, setDegree] = useState(1);\n  const calculate = Operator => {\n    //after a '=' has been pressed or another set of number has started\n    //will perform calculate between the latest sum(calculating the last two of number set)\n    if (Operator === '+') {\n      setSum(sum + display);\n    } else if (Operator === '-') {\n      setSum(sum - display);\n    } else if (Operator === '*') {\n      setSum(sum * display);\n    } else if (Operator === '%') {\n      setSum(sum / display);\n    }\n  };\n  const checkPin = pin => {\n    if (pin === '=') {\n      calculate(pin);\n      setDisplay(sum);\n    } else if (['+', '-', '*', '%'].includes(pin)) {\n      if (Mode === 'isNumber') {\n        calculate(pin);\n        setDisplay(0);\n        setMode('isOperand');\n      }\n    } else if (pin >= 1 && pin <= 9) {\n      setDisplay(prevDisplay => prevDisplay === 0 ? pin : prevDisplay * 10 + pin);\n      setDegree(degree + 1);\n      setMode('isNumber');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Calculator App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [display, \" \", sum]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), buttons.map((buttonRow, rowIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: buttonRow.map(pin => /*#__PURE__*/_jsxDEV(\"span\", {\n        class: \"buttonBox\",\n        onClick: () => checkPin(pin),\n        children: pin\n      }, pin, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this))\n    }, rowIndex, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"TKyQnfjFqFtAfb+5krQADgK/dUI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","useState","jsxDEV","_jsxDEV","App","_s","buttons","currentOperator","Mode","setMode","display","setDisplay","sum","setSum","degree","setDegree","calculate","Operator","checkPin","pin","includes","prevDisplay","children","fileName","_jsxFileName","lineNumber","columnNumber","map","buttonRow","rowIndex","class","onClick","_c","$RefreshReg$"],"sources":["D:/Calculator web/react-calculator/src/App.js"],"sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport { useState } from \"react\";\n\nfunction App() {\n  const buttons = [[1,2,3],[4,5,6],[7,8,9],['+','-','*','%', '=']];\n  const currentOperator = null;\n  const [Mode, setMode]= useState('isNumber')\n  const [display, setDisplay] = useState(0);\n  const [sum, setSum] = useState(0);\n  const [degree, setDegree] = useState(1);\n\n  const calculate = (Operator)=>{\n    //after a '=' has been pressed or another set of number has started\n    //will perform calculate between the latest sum(calculating the last two of number set)\n    if(Operator === '+')\n    {\n      setSum(sum + display);\n    }\n    else if(Operator === '-')\n    {\n      setSum(sum - display);\n    }\n    else if(Operator === '*')\n    {\n      setSum(sum * display)\n    }\n    else if(Operator === '%')\n    {\n      setSum(sum / display)\n    }\n  }\n\n  const checkPin = (pin) => {\n    \n    if(pin === '='){\n      calculate(pin)\n      setDisplay(sum)\n    }\n    else if (['+', '-', '*', '%'].includes(pin)) {\n      if(Mode ==='isNumber'){\n        calculate(pin)\n        setDisplay(0)\n        setMode('isOperand')\n      }\n    }\n\n    else if (pin>=1 && pin<=9) {\n        setDisplay(prevDisplay => prevDisplay === 0 ? pin : prevDisplay * 10 + pin);\n        setDegree(degree + 1);\n        setMode('isNumber')\n    }\n\n\n  }\n\n  return (\n    <div>\n      <h1>Calculator App</h1>\n      <div>{display} {sum}</div>\n      {buttons.map((buttonRow, rowIndex) => (\n        <div key={rowIndex}>\n          {buttonRow.map((pin) => (\n            <span class=\"buttonBox\" key={pin} onClick={() => checkPin(pin)}>{pin}</span>\n          ))}\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,IAAI,MAAM,YAAY;AAC7B,OAAO,WAAW;AAClB,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAMC,OAAO,GAAG,CAAC,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,EAAC,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,EAAC,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,EAAC,CAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAE,GAAG,CAAC,CAAC;EAChE,MAAMC,eAAe,GAAG,IAAI;EAC5B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAER,QAAQ,CAAC,UAAU,CAAC;EAC3C,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC;EACzC,MAAM,CAACW,GAAG,EAAEC,MAAM,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC;EACjC,MAAM,CAACa,MAAM,EAAEC,SAAS,CAAC,GAAGd,QAAQ,CAAC,CAAC,CAAC;EAEvC,MAAMe,SAAS,GAAIC,QAAQ,IAAG;IAC5B;IACA;IACA,IAAGA,QAAQ,KAAK,GAAG,EACnB;MACEJ,MAAM,CAACD,GAAG,GAAGF,OAAO,CAAC;IACvB,CAAC,MACI,IAAGO,QAAQ,KAAK,GAAG,EACxB;MACEJ,MAAM,CAACD,GAAG,GAAGF,OAAO,CAAC;IACvB,CAAC,MACI,IAAGO,QAAQ,KAAK,GAAG,EACxB;MACEJ,MAAM,CAACD,GAAG,GAAGF,OAAO,CAAC;IACvB,CAAC,MACI,IAAGO,QAAQ,KAAK,GAAG,EACxB;MACEJ,MAAM,CAACD,GAAG,GAAGF,OAAO,CAAC;IACvB;EACF,CAAC;EAED,MAAMQ,QAAQ,GAAIC,GAAG,IAAK;IAExB,IAAGA,GAAG,KAAK,GAAG,EAAC;MACbH,SAAS,CAACG,GAAG,CAAC;MACdR,UAAU,CAACC,GAAG,CAAC;IACjB,CAAC,MACI,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAACQ,QAAQ,CAACD,GAAG,CAAC,EAAE;MAC3C,IAAGX,IAAI,KAAI,UAAU,EAAC;QACpBQ,SAAS,CAACG,GAAG,CAAC;QACdR,UAAU,CAAC,CAAC,CAAC;QACbF,OAAO,CAAC,WAAW,CAAC;MACtB;IACF,CAAC,MAEI,IAAIU,GAAG,IAAE,CAAC,IAAIA,GAAG,IAAE,CAAC,EAAE;MACvBR,UAAU,CAACU,WAAW,IAAIA,WAAW,KAAK,CAAC,GAAGF,GAAG,GAAGE,WAAW,GAAG,EAAE,GAAGF,GAAG,CAAC;MAC3EJ,SAAS,CAACD,MAAM,GAAG,CAAC,CAAC;MACrBL,OAAO,CAAC,UAAU,CAAC;IACvB;EAGF,CAAC;EAED,oBACEN,OAAA;IAAAmB,QAAA,gBACEnB,OAAA;MAAAmB,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvBvB,OAAA;MAAAmB,QAAA,GAAMZ,OAAO,EAAC,GAAC,EAACE,GAAG;IAAA;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,EACzBpB,OAAO,CAACqB,GAAG,CAAC,CAACC,SAAS,EAAEC,QAAQ,kBAC/B1B,OAAA;MAAAmB,QAAA,EACGM,SAAS,CAACD,GAAG,CAAER,GAAG,iBACjBhB,OAAA;QAAM2B,KAAK,EAAC,WAAW;QAAWC,OAAO,EAAEA,CAAA,KAAMb,QAAQ,CAACC,GAAG,CAAE;QAAAG,QAAA,EAAEH;MAAG,GAAvCA,GAAG;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAA2C,CAC5E;IAAC,GAHMG,QAAQ;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAIb,CACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACrB,EAAA,CAjEQD,GAAG;AAAA4B,EAAA,GAAH5B,GAAG;AAmEZ,eAAeA,GAAG;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}