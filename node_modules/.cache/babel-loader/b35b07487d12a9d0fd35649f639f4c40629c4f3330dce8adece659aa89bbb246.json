{"ast":null,"code":"var _jsxFileName = \"D:\\\\Calculator web\\\\react-calculator\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport logo from './logo.svg';\nimport './App.css';\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const buttons = [[1, 2, 3], [4, 5, 6], [7, 8, 9], ['+', '-', '*', '%', '=']];\n  const [Mode, setMode] = useState('Number');\n  let number = 0;\n  const [equation, setEquation] = useState('0');\n  const infixToPostfix = infix => {\n    const precedence = {\n      '+': 1,\n      '-': 1,\n      '*': 2,\n      '/': 2\n    };\n    const isOperator = char => ['+', '-', '*', '/'].includes(char);\n    let stack = [];\n    let postfix = '';\n    for (let i = 0; i < infix.length; i++) {\n      const char = infix[i];\n      if (!isNaN(char)) {\n        postfix += char;\n      } else if (isOperator(char)) {\n        while (stack.length && precedence[stack[stack.length - 1]] >= precedence[char]) {\n          postfix += stack.pop();\n        }\n        stack.push(char);\n      }\n    }\n    while (stack.length) {\n      postfix += stack.pop();\n    }\n    return postfix;\n  };\n  const evaluatePostfix = postfix => {\n    let stack = [];\n    for (let i = 0; i < postfix.length; i++) {\n      const char = postfix[i];\n      if (!isNaN(char)) {\n        stack.push(parseFloat(char));\n      } else {\n        const b = stack.pop();\n        const a = stack.pop();\n        switch (char) {\n          case '+':\n            stack.push(a + b);\n            break;\n          case '-':\n            stack.push(a - b);\n            break;\n          case '*':\n            stack.push(a * b);\n            break;\n          case '/':\n            stack.push(a / b);\n            break;\n        }\n      }\n    }\n    return stack[0];\n  };\n  const calculate = equation => {\n    const postfix = infixToPostfix(equation);\n    return evaluatePostfix(postfix);\n  };\n  const checkPin = pin => {\n    if (pin === '=') {\n      setEquation(calculate());\n    } else if (['+', '-', '*', '%'].includes(pin)) {\n      if (Mode === 'Number') {\n        setEquation(equation + pin);\n        setMode('Operator');\n      } else {\n        setEquation(equation.slice(0, -1) + pin);\n      }\n    } else if (pin >= 1 && pin <= 9) {\n      setMode('Number');\n      number === 0 ? number = pin : number = number * 10 + pin;\n      equation === '0' ? setEquation(number) : setEquation(equation + number);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Calculator App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: equation\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), buttons.map((buttonRow, rowIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: buttonRow.map(pin => /*#__PURE__*/_jsxDEV(\"span\", {\n        class: \"buttonBox\",\n        onClick: () => checkPin(pin),\n        children: pin\n      }, pin, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 13\n      }, this))\n    }, rowIndex, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"1TzrHIEb/5lhuL3hbmL4xmqoq7A=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","useState","jsxDEV","_jsxDEV","App","_s","buttons","Mode","setMode","number","equation","setEquation","infixToPostfix","infix","precedence","isOperator","char","includes","stack","postfix","i","length","isNaN","pop","push","evaluatePostfix","parseFloat","b","a","calculate","checkPin","pin","slice","children","fileName","_jsxFileName","lineNumber","columnNumber","map","buttonRow","rowIndex","class","onClick","_c","$RefreshReg$"],"sources":["D:/Calculator web/react-calculator/src/App.js"],"sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport { useState } from \"react\";\n\nfunction App() {\n  const buttons = [[1,2,3],[4,5,6],[7,8,9],['+','-','*','%', '=']];\n  const [Mode, setMode] = useState('Number');\n  let number= 0;\n  const [equation,setEquation]= useState('0');\n\n  const infixToPostfix = (infix) => {\n    const precedence = {\n      '+': 1,\n      '-': 1,\n      '*': 2,\n      '/': 2\n    };\n  \n    const isOperator = (char) => ['+', '-', '*', '/'].includes(char);\n  \n    let stack = [];\n    let postfix = '';\n  \n    for (let i = 0; i < infix.length; i++) {\n      const char = infix[i];\n  \n      if (!isNaN(char)) {\n        postfix += char;\n      } else if (isOperator(char)) {\n        while (stack.length && precedence[stack[stack.length - 1]] >= precedence[char]) {\n          postfix += stack.pop();\n        }\n        stack.push(char);\n      }\n    }\n  \n    while (stack.length) {\n      postfix += stack.pop();\n    }\n  \n    return postfix;\n  };\n\n  const evaluatePostfix = (postfix) => {\n    let stack = [];\n  \n    for (let i = 0; i < postfix.length; i++) {\n      const char = postfix[i];\n  \n      if (!isNaN(char)) {\n        stack.push(parseFloat(char));\n      } else {\n        const b = stack.pop();\n        const a = stack.pop();\n        switch (char) {\n          case '+':\n            stack.push(a + b);\n            break;\n          case '-':\n            stack.push(a - b);\n            break;\n          case '*':\n            stack.push(a * b);\n            break;\n          case '/':\n            stack.push(a / b);\n            break;\n        }\n      }\n    }\n  \n    return stack[0];\n  };\n\n\n  const calculate = (equation) => {\n    const postfix = infixToPostfix(equation);\n    return evaluatePostfix(postfix);\n  };\n  \n  \n  const checkPin = (pin) => {\n    \n    if(pin === '='){\n      setEquation(calculate())\n    }\n    else if (['+', '-', '*', '%'].includes(pin)) {\n      if(Mode === 'Number'){\n        setEquation(equation + pin)\n        setMode('Operator')\n      }\n      else{\n        setEquation(equation.slice(0, -1) + pin)\n      }\n    }\n\n    else if (pin>=1 && pin<=9) {\n        setMode('Number')\n        number === 0 ? number = pin : number = number * 10 + pin;\n        equation === '0'? setEquation(number) : setEquation(equation + number)\n    }\n\n\n  }\n\n  return (\n    <div>\n      <h1>Calculator App</h1>\n      <div>{equation}</div>\n      {buttons.map((buttonRow, rowIndex) => (\n        <div key={rowIndex}>\n          {buttonRow.map((pin) => (\n            <span class=\"buttonBox\" key={pin} onClick={() => checkPin(pin)}>{pin}</span>\n          ))}\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}